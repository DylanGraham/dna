# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "centos/7"

  config.vm.define "seqtrack"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

    #Disabling the default /vagrant share:
    config.vm.synced_folder ".", "/vagrant", disabled: true

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
    vb.name = "seqtrack"
  #   # Customize the amount of memory on the VM:
    vb.memory = "2048"
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provsioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.

  #config.vm.provision "shell", path: "https://example.com/provisioner.sh"
  config.vm.provision "shell", inline: <<-SHELL

sed -i 's/SELINUX=enforcing/SELINUX=permissive/' /etc/sysconfig/selinux
setenforce 0
#yum -y update
systemctl stop firewalld
systemctl disable firewalld

echo seqtrack > /etc/hostname
hostname seqtrack

if ! rpm --quiet -q screen vim-enhanced wget epel-release mariadb-server git; then
    yum -y install screen vim-enhanced wget epel-release mariadb-server git
fi

if ! rpm --quiet -q ius-release; then
    rpm -ivh https://dl.iuscommunity.org/pub/ius/stable/CentOS/7/x86_64/ius-release-1.0-14.ius.centos7.noarch.rpm
fi

if ! rpm --quiet -q php56u php56u-mcrypt php56u-mysqlnd; then
    yum -y install php56u php56u-mcrypt php56u-mysqlnd
fi

if ! rpm --quiet -q composer; then
    yum -y install composer
fi

sed -i 's/# caption always "%{wk/caption always "%{wk/' /etc/screenrc

sed -i 's/memory_limit = 128M/memory_limit = 1024M/' /etc/php.ini

cat <<'EOF' >.vimrc
set background=dark
syntax on
set tabstop=4
set shiftwidth=4
set expandtab
if match($TERMCAP, 'Co#256:') == 0 || match($TERMCAP, ':Co#256:') > 0           
    set t_Co=256                                                                
endif
EOF

systemctl enable httpd
systemctl start mariadb
systemctl enable mariadb

mysql -u root <<-EOF
UPDATE mysql.user SET Password=PASSWORD('WiadzowUkdai') WHERE User='root';
DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');
DELETE FROM mysql.user WHERE User='';
DELETE FROM mysql.db WHERE Db='test' OR Db='test\_%';
DROP DATABASE test;
CREATE DATABASE seqtrack CHARACTER SET UTF8;
CREATE USER seqtrack@localhost IDENTIFIED BY 'WiadzowUkdai';
GRANT ALL PRIVILEGES ON seqtrack.* TO seqtrack@localhost;
FLUSH PRIVILEGES;
EOF

cat <<'EOF' >/etc/httpd/conf.d/seqtrack.conf
<VirtualHost *:80>
  ServerName seqtrack.dylangraham.org
  DocumentRoot "/home/laravel/seqtrack/public"
  <Directory "/home/laravel/seqtrack/public">
    AllowOverride all
    Require all granted
  </Directory>
</VirtualHost>
EOF

mkdir -v /home/laravel
cd /home/laravel
git clone https://github.com/DylanGraham/seqtrack.git
cd seqtrack

cat <<'EOF' >.env
APP_ENV=local
APP_DEBUG=false
APP_KEY=DOrjRbpCH1kdISysRJdl097qbU1C3oju

DB_HOST=localhost
DB_DATABASE=seqtrack
DB_USERNAME=seqtrack
DB_PASSWORD=WiadzowUkdai
EOF

composer install --no-interaction
composer dump-autoload --no-interaction
php artisan key:generate
php artisan migrate --no-interaction -vvv
php artisan db:seed --no-interaction -vvv

chown -R :apache storage bootstrap/cache
chmod -R g+w storage bootstrap/cache

sed -i 's/APP_ENV=local/APP_ENV=production/' .env
sed -i 's/#ServerName www.example.com:80/ServerName seqtrack.dylangraham.org/' /etc/httpd/conf/httpd.conf
systemctl start httpd

  SHELL
end
